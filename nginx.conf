# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  ec2-3-83-84-122.compute-1.amazonaws.com;
        root         /var/www/;
        index index.html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

#each location represents a match for a given  uri (look it up)
#requests matching a given uri are handled according to the contents of the respective block
#proxy_pass http://127.0.0.1:3000 tells nginx to pass all requests for 
#http://ec2-3-83-84-122.compute-1.amazonaws.com/ to a local server listening on port 3000
#currently the server must be run manually using " node /home/node/expressproject/helloWorld.js"
#remember you can have multiple ssh terminal sessions open, so you can have one running the script
#eventually this will be run in the background using either forever, or pm2
#the current server is a single .js file, not a proper express project
#eventually the proper project in /home/node/expressproject/ will be used to generate dynamic html 


        location / {
          proxy_pass http://127.0.0.1:3000;
        }

        location /alex/ {
          index index.html;
        }

#N.B. proxy_pass directives must be appended with the '/' character
#failure to include this character results in attempts to include the route in the pass
#in this case, http://127.0.0.1/lastResort:3010/;
        location /lastResort/ {
          proxy_pass http://127.0.0.1:3010/;
        }


        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2 default_server;
#        listen       [::]:443 ssl http2 default_server;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        location / {
#        }
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

}

